generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String    @id @default(uuid())
  name                  String
  email                 String    @unique
  password              String
  image                 String?
  created_at            DateTime  @default(now())
  updated_at            DateTime?
  subscription_id       String?
  password_code         String?
  password_code_expires DateTime?
  projects              Project[]
  clients               Client[]

  subscription Subscription? @relation(fields: [subscription_id], references: [id])

  @@map("users")
}

model Project {
  id          String       @id @default(uuid())
  name        String
  description String
  address     String
  city        String
  state       String
  mapsUrl     String
  size        Int
  images      String[]
  user_id     String
  client_id   String?
  created_at  DateTime     @default(now())
  updated_at  DateTime
  convenients Convenient[]

  user   User    @relation(fields: [user_id], references: [id])
  client Client? @relation(fields: [client_id], references: [id])

  @@map("projects")
}

model Client {
  id         String   @id @default(uuid())
  name       String
  image      String?
  user_id    String
  project_id String
  created_at DateTime @default(now())
  updated_at DateTime

  projects Project[]
  user     User      @relation(fields: [user_id], references: [id])

  @@map("clients")
}

model Convenient {
  id          String           @id @default(uuid())
  type        convenients_type
  image360Uri String
  project_id  String

  projects Project @relation(fields: [project_id], references: [id])

  @@map("convenients")
}

model Subscription {
  id          String              @id @default(uuid())
  name        subscription_name
  description String
  price       Float
  features    String[]
  status      subscription_status
  created_at  DateTime            @default(now())
  updated_at  DateTime
  end_date    DateTime
  users       User[]

  @@map("subscriptions")
}

enum subscription_name {
  Starter
  Pro
}

enum convenients_type {
  Banheiro
  Cozinha
  Quarto
  Sala
  Escritorio
  Lavanderia
  Garagem
  Varanda
  Jardim
  SalaDeJantar
  HallDeEntrada
  Despensa
  Closet
  SalaDeEstar
}

enum subscription_status {
  Expirado
  Ativo
}
